generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  createAt   DateTime    @default(now()) @map("created_at")
  updateAt   DateTime    @updatedAt @map("updated_at")
  email      String      @unique
  password   String
  role       String      @default("user")
  orders     Order[]
  promotions Promotion[] @relation("PromotionToUser")
}

model Promotion {
  id          Int      @id @default(autoincrement())
  createAt    DateTime @default(now()) @map("created_at")
  updateAt    DateTime @updatedAt @map("updated_at")
  name        String   @unique
  description String
  users       User[]   @relation("PromotionToUser")
}

model Dish {
  id          Int         @id @default(autoincrement())
  createAt    DateTime    @default(now()) @map("created_at")
  updateAt    DateTime    @updatedAt @map("updated_at")
  name        String      @unique
  images      String
  category    String
  description String
  cost        Int
  weight      Int
  calories    Int
  orderDishs  OrderDish[]
}

model Order {
  id          Int         @id @default(autoincrement())
  createAt    DateTime    @default(now()) @map("created_at")
  updateAt    DateTime    @updatedAt @map("updated_at")
  isCompleted Boolean     @default(false) @map("is_completed")
  totalPrice  Int         @map("total_price")
  userId      Int?        @map("user_id")
  User        User?       @relation(fields: [userId], references: [id])
  dishes      OrderDish[]
}

model News {
  id          Int      @id @default(autoincrement())
  createAt    DateTime @default(now()) @map("created_at")
  updateAt    DateTime @updatedAt @map("updated_at")
  name        String   @unique
  description String
  image       String
}

model OrderDish {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now()) @map("created_at")
  updateAt DateTime @updatedAt @map("updated_at")

  quantity Int
  price    Int

  dish    Dish   @relation(fields: [dishId], references: [id], onDelete: Cascade)
  order   Order? @relation(fields: [orderId], references: [id], onDelete: Cascade)
  dishId  Int
  orderId Int?   @map("order_id")
}
